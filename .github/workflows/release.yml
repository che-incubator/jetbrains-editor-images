#
# Copyright (c) 2021 Red Hat, Inc.
# This program and the accompanying materials are made
# available under the terms of the Eclipse Public License 2.0
# which is available at https://www.eclipse.org/legal/epl-2.0/
#
# SPDX-License-Identifier: EPL-2.0
#

name: Upload Release Assets

on:
  push:
    tags:
      - "*"

jobs:
  create_release:
    name: Create release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: true
          body: |
            [MANUALLY ADDED RELEASE NOTES]
  prepare_environment:
    name: Prepare Environment
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - id: set-matrix
        run: |
          echo "::set-output name=matrix::{\"include\":[$( .github/build-container-matrix.sh -m all )]}"
  build:
    name: ${{ matrix.productCode }} (${{ matrix.version }}) - Release Asset
    needs: [prepare_environment, create_release]
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.prepare_environment.outputs.matrix) }}
    steps:
      - name: Clone github repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Tag name
        id: tag_name
        run: echo ::set-output name=sourceTag::${GITHUB_REF#refs/tags/}
      - name: Docker login
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}
      - name: Build and save docker image
        run: |
          ./projector.sh build \
              --tag ${{ secrets.QUAY_REPOSITORY }}/${{ matrix.dockerImage }}:${{ matrix.version }} \
              --url ${{ matrix.downloadUrl }} \
              --save-on-build \
              --progress plain \
              --log-level debug
      - name: Provide release asset path
        id: release_asset_path
        run: echo ::set-output name=path::build/docker/$(basename ${{ matrix.downloadUrl }})
      - name: Provide release asset name
        id: release_asset_name
        run: echo ::set-output name=name::${{ steps.tag_name.outputs.sourceTag }}-$(basename ${{ matrix.downloadUrl }})
      - name: Upload release asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ${{ steps.release_asset_path.outputs.path }}
          asset_name: ${{ steps.release_asset_name.outputs.name }}
          asset_content_type: application/gzip
      - name: Publish released image to quay.io
        run: |
          # publish `repo/name:version`
          docker push ${{ secrets.QUAY_REPOSITORY }}/${{ matrix.dockerImage }}:${{ matrix.version }}

          # publish `repo/name:version-tag`
          docker tag ${{ secrets.QUAY_REPOSITORY }}/${{ matrix.dockerImage }}:${{ matrix.version }} ${{ secrets.QUAY_REPOSITORY }}/${{ matrix.dockerImage }}:${{ matrix.version }}-${{ steps.tag_name.outputs.sourceTag }}
          docker push ${{ secrets.QUAY_REPOSITORY }}/${{ matrix.dockerImage }}:${{ matrix.version }}-${{ steps.tag_name.outputs.sourceTag }}

          # publish `repo/name:latest`
          if [ ${{ matrix.latest }} == true ]; then
            docker tag ${{ secrets.QUAY_REPOSITORY }}/${{ matrix.dockerImage }}:${{ matrix.version }} ${{ secrets.QUAY_REPOSITORY }}/${{ matrix.dockerImage }}:latest
            docker push ${{ secrets.QUAY_REPOSITORY }}/${{ matrix.dockerImage }}:latest
          fi
